name: reds


on:
  push:
    branches:
    - '*'

  pull_request:
    branches:
    - '*'
  workflow_dispatch:
  workflow_call:


defaults:
  run:
    shell: bash -l {0}
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      id: clone
    
    - name: Clone tardis-sn/tardis-refdata
      uses: actions/checkout@v2
      with:
        repository: tardis-sn/tardis-refdata
        path: tardis-refdata
    
    - name: Create LFS file list
      run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      working-directory: tardis-refdata
    - name: Restore LFS cache
      uses: actions/cache@v2
      id: lfs-cache
      with:
        path: tardis-refdata/.git/lfs
        key: ${{ runner.os }}-lfs-${{ hashFiles('tardis-refdata/.lfs-assets-id') }}-v${{ env.CACHE_NUMBER }}
    - name: Git LFS Pull
      run: git lfs pull
      working-directory: tardis-refdata
      if: steps.lfs-cache.outputs.cache-hit != 'true'
    - name: Git LFS Checkout
      run: git lfs checkout
      working-directory: tardis-refdata
      if: steps.lfs-cache.outputs.cache-hit == 'true'

    - run: blah
      continue-on-error: true
      id: will-fail
    
    - run: echo "this ran"
      if: steps.will-fail.conclusion == 'success'
    
    - run: exit 1
      if: github.event_name != 'workflow_call'
    
    # - run: exit 1
    #   if: steps.will-fail.outcome == 'failure'

  # it-failed:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: needs.build.steps.will-fail.outcome == 'failure'
  #   steps: 
  #     - run: exit 1
  #       # if: steps.will-fail.outcome == 'failure'
      